DROP TABLE IF EXISTS FILM_GENRES;
DROP TABLE IF EXISTS FILM_LIKES;
DROP TABLE IF EXISTS FRIENDS;
DROP TABLE IF EXISTS FILMS;
DROP TABLE IF EXISTS GENRES;
DROP TABLE IF EXISTS RATINGS;
DROP TABLE IF EXISTS USERS;

CREATE TABLE GENRES (
    ID_GENRE BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    CONSTRAINT GENRES_PK PRIMARY KEY (ID_GENRE)
);

CREATE TABLE RATINGS (
    ID_RATING BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(10) NOT NULL,
    CONSTRAINT RATINGS_PK PRIMARY KEY (ID_RATING)
);

CREATE TABLE USERS (
    ID_USER BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL VARCHAR(50) NOT NULL,
    LOGIN VARCHAR(50) NOT NULL,
    NAME VARCHAR(50),
    BIRTHDAY DATE,
    CONSTRAINT USERS_PK PRIMARY KEY (ID_USER),
    CONSTRAINT USERS_EMAIL_UNIQUE UNIQUE (EMAIL),
    CONSTRAINT USERS_LOGIN_UNIQUE UNIQUE (LOGIN)
);

CREATE TABLE FILMS (
    ID_FILM BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    DESCRIPTION VARCHAR(255),
    ID_RATING BIGINT,
    RELEASE_DATE DATE,
    DURATION BIGINT,
    CONSTRAINT FILMS_PK PRIMARY KEY (ID_FILM),
    CONSTRAINT FILMS_RATINGS_FK FOREIGN KEY (ID_RATING) REFERENCES RATINGS(ID_RATING)
);

CREATE TABLE FILM_GENRES (
    ID_FILM BIGINT NOT NULL,
    ID_GENRE BIGINT NOT NULL,
    CONSTRAINT FILMS_GENRES_PK PRIMARY KEY (ID_FILM,ID_GENRE),
    CONSTRAINT FILM_GENRES_FK_FILM  FOREIGN KEY (ID_FILM) REFERENCES FILMS(ID_FILM) ON DELETE CASCADE,
    CONSTRAINT FILM_GENRES_FK_GENRE FOREIGN KEY (ID_GENRE) REFERENCES GENRES(ID_GENRE) ON DELETE CASCADE
);

CREATE TABLE FILM_LIKES (
    ID_FILM BIGINT NOT NULL,
    ID_USER BIGINT NOT NULL,
    CONSTRAINT FILM_LIKES_PK PRIMARY KEY (ID_FILM,ID_USER),
    CONSTRAINT FILM_LIKES_FK_FILM FOREIGN KEY (ID_FILM) REFERENCES FILMS(ID_FILM) ON DELETE CASCADE,
    CONSTRAINT FILM_LIKES_FK_USER FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER) ON DELETE CASCADE
);

CREATE TABLE FRIENDS (
    ID_USER BIGINT NOT NULL,
    ID_FRIEND_USER BIGINT NOT NULL,
    CONSTRAINT FRIENDS_PK PRIMARY KEY (ID_USER, ID_FRIEND_USER),
    CONSTRAINT FRIENDS_FK_USER FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER) ON DELETE CASCADE,
    CONSTRAINT FRIENDS_FK_FRIEND_USER FOREIGN KEY (ID_FRIEND_USER) REFERENCES USERS(ID_USER) ON DELETE CASCADE,
    CONSTRAINT FRIENDS_CHECK CHECK (ID_USER <> ID_FRIEND_USER)
);