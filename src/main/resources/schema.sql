DROP TABLE IF EXISTS film_genres;
DROP TABLE IF EXISTS film_likes;
DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS genres;
DROP TABLE IF EXISTS ratings;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS status_friendship;

CREATE TABLE IF NOT EXISTS genres (
    id_genre BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS ratings (
    id_rating BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS status_friendship (
    id_status_friendship BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
    id_user BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(50) NOT NULL,
    login VARCHAR(50) NOT NULL,
    name VARCHAR(50),
    birthday DATE
);

CREATE TABLE IF NOT EXISTS films (
    id_film BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description VARCHAR(255),
    id_rating BIGINT,
    release_date DATE,
    duration BIGINT,
    FOREIGN KEY (id_rating) REFERENCES ratings(id_rating)
);

CREATE TABLE IF NOT EXISTS film_genres (
    id_film BIGINT,
    id_genre BIGINT,
    PRIMARY KEY (id_film, id_genre),
    FOREIGN KEY (id_film) REFERENCES films(id_film),
    FOREIGN KEY (id_genre) REFERENCES genres(id_genre)
);

CREATE TABLE IF NOT EXISTS film_likes (
    id_film BIGINT,
    id_user BIGINT,
    PRIMARY KEY (id_film, id_user),
    FOREIGN KEY (id_film) REFERENCES films(id_film),
    FOREIGN KEY (id_user) REFERENCES users(id_user)
);

CREATE TABLE IF NOT EXISTS friends (
    id_user BIGINT,
    id_friend_user BIGINT,
    id_status_friendship BIGINT,
    PRIMARY KEY (id_user, id_friend_user),
    FOREIGN KEY (id_user) REFERENCES users(id_user),
    FOREIGN KEY (id_friend_user) REFERENCES users(id_user),
    FOREIGN KEY (id_status_friendship) REFERENCES status_friendship(id_status_friendship)
);

